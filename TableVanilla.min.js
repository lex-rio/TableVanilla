"use strict";export default class TableVanilla{constructor(t,e){let a=t instanceof HTMLElement?t:document.querySelector(t);if(!a||0===a.length)throw"invalid container provided";this.options={pageList:"[10,25,50,100]",pageSize:10,deepLinking:"on",url:"/",sortOrder:"asc",sortName:"id",...a.dataset,...e},this.url=new URL(this.options.url,location.origin),this.dataset={page:1,sort:this.options.sortName,order:this.options.sortOrder,limit:+this.options.pageSize},location.hash&&(this.dataset={...this.dataset,...Object.fromEntries(location.hash.split("#")[1].split("&").map(t=>t.split("=")))}),this.render(a)}async render(t){let e=document.createElement("table"),a=document.createElement("span");this.thead=document.createElement("thead"),this.tbody=document.createElement("tbody"),this.metaData=document.createElement("span"),this.pagination=document.createElement("ul"),e.classList.add("stripped"),a.classList.add("meta"),this.metaData.classList.add("meta"),this.pagination.classList.add("pagination"),this.options.columns&&this.renderHeader(this.options.columns.split(",").map(t=>t.split("="))),a.innerHTML=`<select>\n${JSON.parse(this.options.pageList).map(t=>`<option ${t===+this.dataset.limit?"selected":""} value="${t}">${t}</option>`).join("")}\n</select> rows per page`,this.addHandlers(this.thead,a,this.pagination),e.append(this.thead,this.tbody),t.append(e,this.metaData,a,this.pagination),this.renderPage(this.dataset.page)}addHandlers(t,e,a){t.addEventListener("click",async t=>{if(!t.target.hash)return;t.preventDefault(),document.getElementsByClassName(this.dataset.order)[0].classList.remove(this.dataset.order);let e=t.target.hash.split("-")[1];this.dataset.sort!==e?this.dataset.sort=e:this.dataset.order="desc"===this.dataset.order?"asc":"desc",await this.renderPage(this.dataset.page),t.target.classList.add(this.dataset.order)}),e.addEventListener("change",t=>{this.dataset.limit=t.target.value,this.renderPage()}),a.addEventListener("click",t=>t.target.hash&&this.renderPage(t.target.hash.split("-")[1]))}renderHeader(t){this.thead.innerHTML||(this.columns=t,this.thead.innerHTML=`<tr>\n${t.map(([t,e])=>`<th><a class="${t===this.dataset.sort?this.dataset.order:""}" href="#sort-${t}">\n${e||t.replace("_"," ")}\n</a></th>`).concat(this.options.customFields.map(({name:t})=>`<th><div>${t}</div></th>`)).join("")}\n</tr>`)}renderMeta(t,e,a){let s=t+e;this.metaData.innerText=`Showing ${++t} to ${s>a?a:s} of ${a} rows`}renderPagination(t=1,e){this.pagination.innerHTML=`<li><a href="#page-${1===t?e:t-1}">‹</a></li>`+getPages(t,e).map(e=>"..."===e?'<li class="disabled"><a>...</a></li>':`<li class="${t===e?"active":""}"><a href="#page-${e}">${e}</a></li>`).join("")+`<li><a href="#page-${t===e?1:t+1}">›</a></li>`}async renderPage(t=1){this.controller&&this.controller.abort(),this.dataset.page=+t||1;let e=(t-1)*this.dataset.limit,a=await this.getData({...this.dataset,offset:e});if(!a||!a.rows)return this.tbody.innerHTML="Empty set";this.renderHeader(Object.keys(a.rows[0]).map(t=>[t])),this.tbody.innerHTML=a.rows.map(t=>`<tr>\n${this.columns.map(([e])=>`<td class="${t[e]}" title="${t[e]}">${t[e]}</td>`).join("")}\n${this.options.customFields.map(e=>`<td class="${e.name}">${e.callback(t)}</td>`).join("")}\n</tr>`).join(""),this.renderMeta(e,+this.dataset.limit,+a.total),this.renderPagination(this.dataset.page,Math.ceil(a.total/this.dataset.limit)),"on"===this.options.deepLinking&&(location.hash=Object.entries(this.dataset).map(t=>t.join("=")).join("&"))}async getData(t){Object.entries(t).map(t=>this.url.searchParams.set(...t));try{this.controller=new AbortController;let t=await fetch(this.url,{signal:this.controller.signal});return await t.json()}catch(t){console.log("Download aborted")}}};const range=(t,e=0)=>[...Array(t).keys()].map(t=>t+e);function getPages(t,e,a=5){let s=Array.from(new Set([1,...range(a,t-Math.floor(a/2)).filter(t=>t>0&&t<=e),e]));return s[0]+1!==s[1]&&s.splice(1,0,"..."),s[s.length-2]+1!==s[s.length-1]&&s.splice(-1,0,"..."),s}